{"version":3,"file":"js/303.324169f1.js","mappings":"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","sources":["webpack://assignment-2-1/./src/pages/RegisterPage.vue","webpack://assignment-2-1/src/pages/RegisterPage.vue","webpack://assignment-2-1/./src/pages/RegisterPage.vue?84c7","webpack://assignment-2-1/./src/pages/RegisterPage.vue?85f4","webpack://assignment-2-1/./node_modules/core-js/modules/es.array.map.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\"Register\")]),_c('b-form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.onRegister.apply(null, arguments)},\"reset\":function($event){$event.preventDefault();return _vm.onReset.apply(null, arguments)}}},[_c('b-form-group',{attrs:{\"id\":\"input-group-username\",\"label-cols-sm\":\"3\",\"label\":\"Username:\",\"label-for\":\"username\"}},[_c('b-form-input',{attrs:{\"id\":\"username\",\"type\":\"text\",\"state\":_vm.validateState('username')},model:{value:(_vm.$v.form.username.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.username, \"$model\", $$v)},expression:\"$v.form.username.$model\"}}),(!_vm.$v.form.username.required)?_c('b-form-invalid-feedback',[_vm._v(\"Username is required\")]):(!_vm.$v.form.username.length)?_c('b-form-invalid-feedback',[_vm._v(\"Username length should be between 3-8 characters long\")]):_vm._e(),(!_vm.$v.form.username.alpha)?_c('b-form-invalid-feedback',[_vm._v(\"Username must contain only alphabetic characters\")]):_vm._e(),(_vm.usernameExists)?_c('b-form-invalid-feedback',[_vm._v(\"Username already exists\")]):_vm._e()],1),_c('b-form-group',{attrs:{\"id\":\"input-group-firstname\",\"label-cols-sm\":\"3\",\"label\":\"First Name:\",\"label-for\":\"firstname\"}},[_c('b-form-input',{attrs:{\"id\":\"firstname\",\"type\":\"text\",\"state\":_vm.validateState('firstName')},model:{value:(_vm.$v.form.firstName.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.firstName, \"$model\", $$v)},expression:\"$v.form.firstName.$model\"}}),(!_vm.$v.form.firstName.required)?_c('b-form-invalid-feedback',[_vm._v(\"First name is required\")]):_vm._e()],1),_c('b-form-group',{attrs:{\"id\":\"input-group-lastname\",\"label-cols-sm\":\"3\",\"label\":\"Last Name:\",\"label-for\":\"lastname\"}},[_c('b-form-input',{attrs:{\"id\":\"lastname\",\"type\":\"text\",\"state\":_vm.validateState('lastName')},model:{value:(_vm.$v.form.lastName.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.lastName, \"$model\", $$v)},expression:\"$v.form.lastName.$model\"}}),(!_vm.$v.form.lastName.required)?_c('b-form-invalid-feedback',[_vm._v(\"Last name is required\")]):_vm._e()],1),_c('b-form-group',{attrs:{\"id\":\"input-group-email\",\"label-cols-sm\":\"3\",\"label\":\"Email:\",\"label-for\":\"email\"}},[_c('b-form-input',{attrs:{\"id\":\"email\",\"type\":\"email\",\"state\":_vm.validateState('email')},model:{value:(_vm.$v.form.email.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.email, \"$model\", $$v)},expression:\"$v.form.email.$model\"}}),(!_vm.$v.form.email.required)?_c('b-form-invalid-feedback',[_vm._v(\"Email is required\")]):_vm._e(),(!_vm.$v.form.email.email)?_c('b-form-invalid-feedback',[_vm._v(\"Invalid email format\")]):_vm._e()],1),_c('b-form-group',{attrs:{\"id\":\"input-group-country\",\"label-cols-sm\":\"3\",\"label\":\"Country:\",\"label-for\":\"country\"}},[_c('b-form-select',{attrs:{\"id\":\"country\",\"options\":_vm.countries,\"state\":_vm.validateState('country')},model:{value:(_vm.$v.form.country.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.country, \"$model\", $$v)},expression:\"$v.form.country.$model\"}}),_c('b-form-invalid-feedback',[_vm._v(\"Country is required\")])],1),_c('b-form-group',{attrs:{\"id\":\"input-group-password\",\"label-cols-sm\":\"3\",\"label\":\"Password:\",\"label-for\":\"password\"}},[_c('b-form-input',{attrs:{\"id\":\"password\",\"type\":\"password\",\"state\":_vm.validateState('password')},model:{value:(_vm.$v.form.password.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.password, \"$model\", $$v)},expression:\"$v.form.password.$model\"}}),(!_vm.$v.form.password.required)?_c('b-form-invalid-feedback',[_vm._v(\"Password is required\")]):_vm._e(),(!_vm.$v.form.password.passwordComplexity)?_c('b-form-invalid-feedback',[_vm._v(\"Password must contain at least one number and one special character\")]):_vm._e(),(!_vm.$v.form.password.length)?_c('b-form-invalid-feedback',[_vm._v(\"Password must be between 5-10 characters long\")]):_vm._e()],1),_c('b-form-group',{attrs:{\"id\":\"input-group-confirmedPassword\",\"label-cols-sm\":\"3\",\"label\":\"Confirm Password:\",\"label-for\":\"confirmedPassword\"}},[_c('b-form-input',{attrs:{\"id\":\"confirmedPassword\",\"type\":\"password\",\"state\":_vm.validateState('confirmedPassword')},model:{value:(_vm.$v.form.confirmedPassword.$model),callback:function ($$v) {_vm.$set(_vm.$v.form.confirmedPassword, \"$model\", $$v)},expression:\"$v.form.confirmedPassword.$model\"}}),(!_vm.$v.form.confirmedPassword.required)?_c('b-form-invalid-feedback',[_vm._v(\"Password confirmation is required\")]):_vm._e(),(!_vm.$v.form.confirmedPassword.sameAsPassword)?_c('b-form-invalid-feedback',[_vm._v(\"The confirmed password is not equal to the original password\")]):_vm._e()],1),_c('b-button',{attrs:{\"type\":\"reset\",\"variant\":\"danger\"}},[_vm._v(\"Reset\")]),_c('b-button',{staticClass:\"ml-5 w-75\",staticStyle:{\"width\":\"250px\"},attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Register\")]),_c('div',{staticClass:\"mt-2\"},[_vm._v(\" You have an account already? \"),_c('router-link',{attrs:{\"to\":\"login\"}},[_vm._v(\" Log in here\")])],1)],1),(_vm.form.submitError)?_c('b-alert',{staticClass:\"mt-2\",attrs:{\"variant\":\"warning\",\"dismissible\":\"\",\"show\":\"\"}},[_vm._v(\"Register failed: \"+_vm._s(_vm.form.submitError))]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Register</h1>\r\n    <b-form @submit.prevent=\"onRegister\" @reset.prevent=\"onReset\">\r\n      <b-form-group id=\"input-group-username\" label-cols-sm=\"3\" label=\"Username:\" label-for=\"username\">\r\n        <b-form-input id=\"username\" v-model=\"$v.form.username.$model\" type=\"text\" :state=\"validateState('username')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.username.required\">Username is required</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-else-if=\"!$v.form.username.length\">Username length should be between 3-8 characters long</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.username.alpha\">Username must contain only alphabetic characters</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"usernameExists\">Username already exists</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-firstname\" label-cols-sm=\"3\" label=\"First Name:\" label-for=\"firstname\">\r\n        <b-form-input id=\"firstname\" v-model=\"$v.form.firstName.$model\" type=\"text\" :state=\"validateState('firstName')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.firstName.required\">First name is required</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-lastname\" label-cols-sm=\"3\" label=\"Last Name:\" label-for=\"lastname\">\r\n        <b-form-input id=\"lastname\" v-model=\"$v.form.lastName.$model\" type=\"text\" :state=\"validateState('lastName')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.lastName.required\">Last name is required</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-email\" label-cols-sm=\"3\" label=\"Email:\" label-for=\"email\">\r\n        <b-form-input id=\"email\" v-model=\"$v.form.email.$model\" type=\"email\" :state=\"validateState('email')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.email.required\">Email is required</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.email.email\">Invalid email format</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-country\" label-cols-sm=\"3\" label=\"Country:\" label-for=\"country\">\r\n        <b-form-select id=\"country\" v-model=\"$v.form.country.$model\" :options=\"countries\" :state=\"validateState('country')\"></b-form-select>\r\n        <b-form-invalid-feedback>Country is required</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-password\" label-cols-sm=\"3\" label=\"Password:\" label-for=\"password\">\r\n        <b-form-input id=\"password\" type=\"password\" v-model=\"$v.form.password.$model\" :state=\"validateState('password')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.password.required\">Password is required</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.password.passwordComplexity\">Password must contain at least one number and one special character</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.password.length\">Password must be between 5-10 characters long</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group id=\"input-group-confirmedPassword\" label-cols-sm=\"3\" label=\"Confirm Password:\" label-for=\"confirmedPassword\">\r\n        <b-form-input id=\"confirmedPassword\" type=\"password\" v-model=\"$v.form.confirmedPassword.$model\" :state=\"validateState('confirmedPassword')\"></b-form-input>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.confirmedPassword.required\">Password confirmation is required</b-form-invalid-feedback>\r\n        <b-form-invalid-feedback v-if=\"!$v.form.confirmedPassword.sameAsPassword\">The confirmed password is not equal to the original password</b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\r\n      <b-button type=\"submit\" variant=\"primary\" style=\"width:250px;\" class=\"ml-5 w-75\">Register</b-button>\r\n      <div class=\"mt-2\">\r\n        You have an account already?\r\n        <router-link to=\"login\"> Log in here</router-link>\r\n      </div>\r\n    </b-form>\r\n    <b-alert class=\"mt-2\" v-if=\"form.submitError\" variant=\"warning\" dismissible show>Register failed: {{ form.submitError }}</b-alert>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { required, minLength, maxLength, alpha, sameAs, email } from \"vuelidate/lib/validators\";\r\nimport { mockRegister, mockCheckUsernameExists } from \"../services/auth.js\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\",\r\n        submitError: undefined\r\n      },\r\n      countries: [{ value: null, text: \"\", disabled: true }],\r\n      usernameExists: false\r\n    };\r\n  },\r\n  validations: {\r\n    form: {\r\n      username: {\r\n        required,\r\n        length: (u) => minLength(3)(u) && maxLength(8)(u),\r\n        alpha\r\n      },\r\n      firstName: { required },\r\n      lastName: { required },\r\n      email: { required, email },\r\n      country: { required },\r\n      password: {\r\n        required,\r\n        length: (p) => minLength(5)(p) && maxLength(10)(p),\r\n        passwordComplexity: (p) => /[0-9]/.test(p) && /[!@#$%^&*]/.test(p)\r\n      },\r\n      confirmedPassword: {\r\n        required,\r\n        sameAsPassword: sameAs(\"password\")\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchCountries();\r\n  },\r\n  methods: {\r\n    async fetchCountries() {\r\n      try {\r\n        const response = await axios.get(\"https://restcountries.com/v3.1/all\");\r\n        this.countries = response.data.map((country) => ({\r\n          value: country.cca2,\r\n          text: country.name.common\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching countries:\", error);\r\n      }\r\n    },\r\n    validateState(param) {\r\n      const { $dirty, $error } = this.$v.form[param];\r\n      return $dirty ? !$error : null;\r\n    },\r\n    async Register() {\r\n      try {\r\n        this.usernameExists = false;\r\n        const userDetails = {\r\n          username: this.form.username,\r\n          firstName: this.form.firstName,\r\n          lastName: this.form.lastName,\r\n          email: this.form.email,\r\n          country: this.form.country,\r\n          password: this.form.password\r\n        };\r\n\r\n        // Mock check if username exists\r\n        const usernameExists = mockCheckUsernameExists(this.form.username);\r\n        if (usernameExists) {\r\n          this.usernameExists = true;\r\n          return;\r\n        }\r\n\r\n        const response = mockRegister(userDetails);\r\n        this.$router.push(\"/login\");\r\n      } catch (err) {\r\n        console.log(err.response);\r\n        this.form.submitError = err.response.data.message;\r\n      }\r\n    },\r\n    onRegister() {\r\n      this.$v.form.$touch();\r\n      if (this.$v.form.$anyError) {\r\n        return;\r\n      }\r\n      this.Register();\r\n    },\r\n    onReset() {\r\n      this.form = {\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        country: null,\r\n        password: \"\",\r\n        confirmedPassword: \"\"\r\n      };\r\n      this.$nextTick(() => {\r\n        this.$v.$reset();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  max-width: 500px;\r\n  margin-top: 5%;\r\n  margin-bottom:5%;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RegisterPage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RegisterPage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./RegisterPage.vue?vue&type=template&id=aecc4356&scoped=true\"\nimport script from \"./RegisterPage.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterPage.vue?vue&type=script&lang=js\"\nimport style0 from \"./RegisterPage.vue?vue&type=style&index=0&id=aecc4356&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"aecc4356\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"names":["render","_vm","this","_c","_self","staticClass","_v","on","$event","preventDefault","onRegister","apply","arguments","onReset","attrs","validateState","model","value","$v","form","username","$model","callback","$$v","$set","expression","required","length","_e","alpha","usernameExists","firstName","lastName","email","countries","country","password","passwordComplexity","confirmedPassword","sameAsPassword","staticStyle","submitError","_s","staticRenderFns","name","data","undefined","text","disabled","validations","u","minLength","maxLength","p","test","sameAs","mounted","fetchCountries","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","sent","map","cca2","common","t0","console","error","stop","param","_this$$v$form$param","$dirty","$error","Register","_this2","_callee2","userDetails","_context2","mockCheckUsernameExists","abrupt","mockRegister","$router","push","log","message","$touch","$anyError","_this3","$nextTick","$reset","component","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn"],"sourceRoot":""}